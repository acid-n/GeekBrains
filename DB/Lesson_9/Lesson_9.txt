1) В базе данных shop и sample присутствуют одни и те же таблицы, учебной базы данных. Переместите запись id = 1 из таблицы shop.users в таблицу sample.users. Используйте транзакции.

-- Создаем вторую БД sample, создаем таблицы как в shop
-- Делаем транзакцию:
mysql>START TRANSACTION;
-- Убеждаемся, что в sample.users пусто
mysql>SELECT * FROM sample.users;
-- Проводим опирацию вставки данных из shop.users
mysql>INSERT INTO users (id, name, birthday_at) SELECT shop.users.id, shop.users.name, shop.users.birthday_at FROM shop.users;
-- Завершаем транзакцию
mysql>COMMIT;
-- Проверяем, что таблица sample.users теперь заполнена данными из shop.users
mysql>SELECT * FROM sample.users;

2) Создайте представление, которое выводит название name товарной позиции из таблицы products и соответствующее название каталога name из таблицы catalogs.

-- Создаем запрос
mysql>SELECT products.name AS prod_name, catalogs.name AS cat_name FROM products LEFT JOIN catalogs ON products.catalog_id = catalogs.id;
-- Создаем представление
mysql>CREATE VIEW cat AS SELECT products.name AS prod_name, catalogs.name AS cat_name FROM products LEFT JOIN catalogs ON products.catalog_id = catalogs.id;
-- Проверяем представление
mysql>SELECT * FROM cat;


3) Создайте двух пользователей которые имеют доступ к базе данных shop. Первому пользователю shop_read должны быть доступны только запросы на чтение данных, второму пользователю shop — любые операции в пределах базы данных shop.

-- Пользователю shop_read выдаем права на запросы чтение данных в пределах базы данных shop
mysql>GRANT SELECT ON shop TO shop_read;

-- Пользователю shop выдаем права на любые операции в пределах базы данных shop
mysql>GRANT ALL ON shop TO shop;

4) Создайте хранимую функцию hello(), которая будет возвращать приветствие, в зависимости от текущего времени суток. С 6:00 до 12:00 функция должна возвращать фразу "Доброе утро", с 12:00 до 18:00 функция должна возвращать фразу "Добрый день", с 18:00 до 00:00 — "Добрый вечер", с 00:00 до 6:00 — "Доброй ночи".

mysql>DELIMITER //

DROP FUNCTION IF EXISTS hello//

CREATE FUNCTION hello ()
RETURNS VARCHAR(255) DETERMINISTIC
BEGIN
  IF HOUR(NOW()) BETWEEN 6 AND 12 THEN
    RETURN 'Доброе утро!';
  ELSEIF HOUR(NOW()) BETWEEN 12 AND 18 THEN
    RETURN 'Добрый день!';
  ELSEIF HOUR(NOW()) BETWEEN 18 AND 00 THEN
    RETURN 'Доброй ночи!';
  ELSE
    RETURN 'Ошибка';
  END IF;
END//

-- Вызываем
mysql>SELECT hello()//

5) В таблице products есть два текстовых поля: name с названием товара и description с его описанием. Допустимо присутствие обоих полей или одно из них. Ситуация, когда оба поля принимают неопределенное значение NULL неприемлема. Используя триггеры, добейтесь того, чтобы одно из этих полей или оба поля были заполнены. При попытке присвоить полям NULL-значение необходимо отменить операцию.

DELIMITER //

DROP TRIGGER IF EXISTS check_name_insert//
CREATE TRIGGER check_name_insert BEFORE INSERT ON products
FOR EACH ROW
BEGIN
  IF NEW.name IS NULL AND NEW.description IS NULL THEN
    SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Field should be NOT NULL'
  END IF;
END//

Вот с тригерами тема оказалась намного сложнее. Не до конца понимаю что да как. Надо изучить больше примеров. Много тонкостей. Надеюсь на разбор тригеров из ДЗ на уроке. Такак здесь нужны еще проверки на UPDATE. И скорее всего на удаление, а может и не нужны.

